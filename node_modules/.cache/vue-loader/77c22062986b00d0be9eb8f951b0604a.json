{"remainingRequest":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\page\\infoManage\\infoModify.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\page\\infoManage\\infoModify.vue","mtime":1677382302024},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n   import * as mutils from '@/utils/mUtils'\r\n\r\n    export default {\r\n        data(){\r\n             // 附带callback(),是在明确通过验证的情况下去掉输入框上的loading\r\n            let validateEmail = (rule, value, callback) => {\r\n                if(value == ''){\r\n                    callback(new Error('请输入邮箱~'));\r\n                    return;\r\n                }\r\n                let emailRegex = /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/;\r\n                if (!emailRegex.test(value)) {\r\n                    callback(new Error('邮箱格式不正确！'))\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n            let validatePhone = (rule, value, callback) => {\r\n                if(value == ''){\r\n                    callback(new Error('请输入手机号码~'));\r\n                }{\r\n                    let phoneRegex = /^1[34578]\\d{9}$/;\r\n                    if (!phoneRegex.test(value)) {\r\n                        callback(new Error('手机号码格式不正确！'))\r\n                    } else {\r\n                        callback();\r\n                    }\r\n                }\r\n            };\r\n            // validateField:对部分表单字段进行校验的方法\r\n            let validateNewpassword = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('请输入新密码'));\r\n                } else {\r\n                    if (this.pwdForm.surepassword !== '') {\r\n                        this.$refs.pwdForm.validateField('surepassword');\r\n                    }\r\n                    callback();\r\n                }\r\n            };\r\n            let validateSurepassword = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('请输入确认密码'));\r\n                } else if (value !== this.pwdForm.newpassword) {\r\n                    callback(new Error('两次输入密码不一致!'));\r\n                } else {\r\n                   callback();\r\n                }\r\n            };\r\n            return {\r\n               infoForm:{\r\n                   username:'',\r\n                   nickname:'',\r\n                   touziyear:'',\r\n                   email:'',\r\n                   telphone:''\r\n               },\r\n               pwdForm:{\r\n                   password:'',\r\n                   newpassword:'',\r\n                   surepassword:''\r\n               },\r\n               phoneForm:{\r\n                   phone:'',\r\n                   baseType:[],\r\n                   changeType:[]\r\n               },\r\n               infoRules: {\r\n                    nickname: [\r\n                        { required: true, message: '请输入昵称', trigger: 'blur' },\r\n                        { min: 2, max: 8, message: '长度在 2 到 8 个字符', trigger: 'blur' }\r\n                    ],\r\n                    touziyear: [\r\n                        { required: true, message: '请选择投资年限', trigger: 'change' }\r\n                    ],\r\n                    email: [\r\n                        {required: true,validator: validateEmail,trigger: 'blur'}\r\n                    ],\r\n                    telphone: [\r\n                        {required: true,validator: validatePhone, trigger: 'blur' },\r\n                    ],\r\n               },\r\n               pwdRules: {\r\n                    password: [\r\n                        { required: true, message: '请输入原密码', trigger: 'blur' },\r\n                    ],\r\n                    newpassword: [\r\n                        { required: true, validator:validateNewpassword, trigger: 'blur' },\r\n                    ],\r\n                    surepassword: [\r\n                        { required: true, validator:validateSurepassword, trigger: 'blur' },\r\n                    ],\r\n               },\r\n               phoneRules:{\r\n                   phone: [\r\n                        {required: true,validator: validatePhone, trigger: 'blur' },\r\n                   ],\r\n                   baseType: [\r\n                        { type: 'array', required: true, message: '请至少选择一个基础短信服务', trigger: 'change' }\r\n                   ],\r\n                   changeType: [\r\n                        { type: 'array', required: true, message: '请至少选择一个可选短信服务', trigger: 'change' }\r\n                   ],\r\n               },\r\n             \r\n            };\r\n           \r\n\r\n        },\r\n        created(){\r\n           \r\n        },\r\n      \tmounted() {\r\n            // mutils.setContentHeight(this,this.$refs.fillcontain,170);\r\n\t    },\r\n        methods: {\r\n            showMessage(type,message){\r\n                this.$message({\r\n                    type: type,\r\n                    message: message\r\n                });\r\n            },\r\n            showUsername(){\r\n                let userinfo = mutils.getStore('userinfo');\r\n                this.infoForm.username = userinfo.username;\r\n            },\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        if(formName == 'pwdForm'){\r\n                            this.showMessage('success','修改密码成功~');\r\n                        }else if(formName == 'infoForm'){ // 判断手机服务是否为空\r\n                            this.phoneForm.phone = this.infoForm.telphone;\r\n                            for(let key in this.phoneForm){\r\n                                if(this.phoneForm[key] == ''){\r\n                                    this.showMessage('warning','请您选择手机服务~');\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }else if(formName == 'phoneForm'){// 判断修改信息是否为空\r\n                            this.infoForm.telphone = this.phoneForm.phone;\r\n                            for(let key in this.infoForm){\r\n                                if(this.infoForm[key] == ''){\r\n                                    this.showMessage('warning','请您修改相关信息~');\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }\r\n                        //保存修改的相关信息\r\n\t\t\t\t\t\tlet userinfo = this.infoForm;\r\n                        let phoneinfo = this.phoneForm;\r\n\t\t\t\t\t\tlet userData = Object.assign(userinfo, phoneinfo);\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            },\r\n        }\r\n    }\r\n",null]}