{"remainingRequest":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\page\\fundData\\incomePayPosition.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\page\\fundData\\incomePayPosition.vue","mtime":1677339322636},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import echarts from 'echarts';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                chart: null\r\n            };\r\n        },\r\n        mounted() {\r\n            this.setInit();\r\n            // 保证页面在放大或缩小时，也能够动态的显示数据\r\n            window.onresize = () => {\r\n                this.setInit();\r\n            }\r\n        },\r\n        beforeDestroy() {\r\n            if (!this.chart) {\r\n                return\r\n            }\r\n            this.chart.dispose();\r\n            this.chart = null;\r\n        },\r\n        methods: {\r\n            setInit(){\r\n                this.$nextTick(() => {\r\n                    this.$refs.fillcontainer.style.height = (document.body.clientHeight - 160)+'px'\r\n                    this.initChart();\r\n                    this.chart = null;\r\n                });\r\n            },\r\n            initChart() {\r\n                this.chart = echarts.init(document.getElementById('incomePayPosition'));\r\n                const data = {};\r\n                (function() {\r\n                    const xAxisData = [];\r\n                    const seriesIncome = [];\r\n                    const seriesPay = [];\r\n                    const seriesaverage = [];\r\n                    for (let i = 1; i < 13; i++) {\r\n                        xAxisData.push(i + '月份');\r\n                    }\r\n                    data['xAxisData'] = xAxisData;\r\n\r\n                    for (let i = 1; i < 13; i++) {\r\n                       seriesIncome.push(Math.round(Math.random()*10000));\r\n                       seriesPay.push(Math.round(Math.random()*10000));\r\n                       seriesaverage.push(Math.round(Math.random()*10000));\r\n                    }\r\n                     data['seriesIncome'] = seriesIncome;\r\n                     data['seriesPay'] = seriesPay;\r\n                     data['seriesaverage'] = seriesaverage;\r\n                }());\r\n                this.chart.setOption({\r\n                    backgroundColor: '#CCFFCC',\r\n                title: {\r\n                    text: '收支统计',\r\n                    subtext: '单位/万元',\r\n                    x: '4%',\r\n                    textStyle: {\r\n                        color: '#000000',\r\n                        fontSize: '22'\r\n                    },\r\n                    subtextStyle: {\r\n                        color: '#90979c',\r\n                        fontSize: '12'\r\n                    }\r\n                },\r\n                tooltip: { \r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                    textStyle: {\r\n                        color: '#fff'\r\n                    }\r\n                    }\r\n                },\r\n                grid: {\r\n                    borderWidth: 0,\r\n                    top: 110,\r\n                    bottom: 95,\r\n                    textStyle: {\r\n                        color: '#000000'\r\n                    }\r\n                },\r\n                legend: {\r\n                    x: '15%',\r\n                    top: '10%',\r\n                    textStyle: {\r\n                        color: '#90979c'\r\n                    },\r\n                    data: ['收入', '支出', '平均']\r\n                },\r\n                calculable: true,\r\n                xAxis: [{\r\n                    type: 'category',\r\n                    axisLine: {\r\n                    lineStyle: {\r\n                        color: '#0099CC'\r\n                    }\r\n                    },\r\n                    splitLine: {\r\n                         show: false\r\n                    },\r\n                    axisTick: {\r\n                         show: false\r\n                    },\r\n                    splitArea: {\r\n                         show: false\r\n                    },\r\n                    axisLabel: {\r\n                    interval: 0\r\n\r\n                    },\r\n                    data: data.xAxisData\r\n                }],\r\n                yAxis: [{\r\n                    type: 'value',\r\n                    splitLine: {\r\n                        show: false\r\n                    },\r\n                    axisLine: {\r\n                    lineStyle: {\r\n                        color: '#0099CC'\r\n                    }\r\n                    },\r\n                    axisTick: {\r\n                        show: false\r\n                    },\r\n                    axisLabel: {\r\n                        interval: 0\r\n                    },\r\n                    splitArea: {\r\n                        show: false\r\n                    }\r\n                }],\r\n                dataZoom: [{\r\n                    show: true,\r\n                    height: 30,\r\n                    xAxisIndex: [\r\n                        0\r\n                    ],\r\n                    bottom: 30,\r\n                    start: 10,\r\n                    end: 80,\r\n                    handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\r\n                    handleSize: '110%',\r\n                    handleStyle: {\r\n                       color: '#336699'\r\n                    },\r\n                    textStyle: {\r\n                       color: '#000' \r\n                    },\r\n                    borderColor: '#339999'\r\n                }, {\r\n                    type: 'inside',\r\n                    show: true,\r\n                    height: 15,\r\n                    start: 1,\r\n                    end: 35\r\n                }],\r\n                series: [{\r\n                    name: '收入',\r\n                    type: 'bar',\r\n                    stack: '总量',\r\n                    barMaxWidth: 35,\r\n                    barGap: '10%',\r\n                    itemStyle: {\r\n                    normal: {\r\n                        color: '#66CC99',\r\n                        label: {\r\n                            show: true,\r\n                            textStyle: {color: '#fff'},\r\n                            position: 'insideTop',\r\n                            formatter(p) {return p.value > 0 ? p.value : '' }\r\n                        }\r\n                    }\r\n                    },\r\n                    data: data.seriesIncome\r\n                },\r\n                {\r\n                    name: '支出',\r\n                    type: 'bar',\r\n                    stack: '总量',\r\n                    itemStyle: {\r\n                    normal: {\r\n                        color: '#0099CC',\r\n                        barBorderRadius: 0,\r\n                        label: {\r\n                        show: true,\r\n                        position: 'top',\r\n                        formatter(p) {\r\n                            return p.value > 0 ? p.value : '';\r\n                        }\r\n                        }\r\n                    }\r\n                    },\r\n                    data:data.seriesPay\r\n                }, {\r\n                    name: '平均',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    symbolSize: 10,\r\n                    symbol: 'circle',\r\n                    itemStyle: {\r\n                    normal: {\r\n                        color: '#FF9966',\r\n                        barBorderRadius: 0,\r\n                        label: {\r\n                            show: true,\r\n                            position: 'top',\r\n                            formatter(p) {\r\n                                return p.value > 0 ? p.value : '';\r\n                            }\r\n                        }\r\n                    }\r\n                    },\r\n                    data:data.seriesaverage\r\n                }\r\n                ]\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n",{"version":3,"sources":["incomePayPosition.vue"],"names":[],"mappingsfile":"incomePayPosition.vue","sourceRoot":"src/page/fundData","sourcesContent":["<template>\r\n    <div class=\"fillcontain\">\r\n        <div class=\"fillcontainer\" ref=\"fillcontainer\">\r\n           <div id=\"incomePayPosition\" class=\"echartsPosition\"></div> \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import echarts from 'echarts';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                chart: null\r\n            };\r\n        },\r\n        mounted() {\r\n            this.setInit();\r\n            // 保证页面在放大或缩小时，也能够动态的显示数据\r\n            window.onresize = () => {\r\n                this.setInit();\r\n            }\r\n        },\r\n        beforeDestroy() {\r\n            if (!this.chart) {\r\n                return\r\n            }\r\n            this.chart.dispose();\r\n            this.chart = null;\r\n        },\r\n        methods: {\r\n            setInit(){\r\n                this.$nextTick(() => {\r\n                    this.$refs.fillcontainer.style.height = (document.body.clientHeight - 160)+'px'\r\n                    this.initChart();\r\n                    this.chart = null;\r\n                });\r\n            },\r\n            initChart() {\r\n                this.chart = echarts.init(document.getElementById('incomePayPosition'));\r\n                const data = {};\r\n                (function() {\r\n                    const xAxisData = [];\r\n                    const seriesIncome = [];\r\n                    const seriesPay = [];\r\n                    const seriesaverage = [];\r\n                    for (let i = 1; i < 13; i++) {\r\n                        xAxisData.push(i + '月份');\r\n                    }\r\n                    data['xAxisData'] = xAxisData;\r\n\r\n                    for (let i = 1; i < 13; i++) {\r\n                       seriesIncome.push(Math.round(Math.random()*10000));\r\n                       seriesPay.push(Math.round(Math.random()*10000));\r\n                       seriesaverage.push(Math.round(Math.random()*10000));\r\n                    }\r\n                     data['seriesIncome'] = seriesIncome;\r\n                     data['seriesPay'] = seriesPay;\r\n                     data['seriesaverage'] = seriesaverage;\r\n                }());\r\n                this.chart.setOption({\r\n                    backgroundColor: '#CCFFCC',\r\n                title: {\r\n                    text: '收支统计',\r\n                    subtext: '单位/万元',\r\n                    x: '4%',\r\n                    textStyle: {\r\n                        color: '#000000',\r\n                        fontSize: '22'\r\n                    },\r\n                    subtextStyle: {\r\n                        color: '#90979c',\r\n                        fontSize: '12'\r\n                    }\r\n                },\r\n                tooltip: { \r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                    textStyle: {\r\n                        color: '#fff'\r\n                    }\r\n                    }\r\n                },\r\n                grid: {\r\n                    borderWidth: 0,\r\n                    top: 110,\r\n                    bottom: 95,\r\n                    textStyle: {\r\n                        color: '#000000'\r\n                    }\r\n                },\r\n                legend: {\r\n                    x: '15%',\r\n                    top: '10%',\r\n                    textStyle: {\r\n                        color: '#90979c'\r\n                    },\r\n                    data: ['收入', '支出', '平均']\r\n                },\r\n                calculable: true,\r\n                xAxis: [{\r\n                    type: 'category',\r\n                    axisLine: {\r\n                    lineStyle: {\r\n                        color: '#0099CC'\r\n                    }\r\n                    },\r\n                    splitLine: {\r\n                         show: false\r\n                    },\r\n                    axisTick: {\r\n                         show: false\r\n                    },\r\n                    splitArea: {\r\n                         show: false\r\n                    },\r\n                    axisLabel: {\r\n                    interval: 0\r\n\r\n                    },\r\n                    data: data.xAxisData\r\n                }],\r\n                yAxis: [{\r\n                    type: 'value',\r\n                    splitLine: {\r\n                        show: false\r\n                    },\r\n                    axisLine: {\r\n                    lineStyle: {\r\n                        color: '#0099CC'\r\n                    }\r\n                    },\r\n                    axisTick: {\r\n                        show: false\r\n                    },\r\n                    axisLabel: {\r\n                        interval: 0\r\n                    },\r\n                    splitArea: {\r\n                        show: false\r\n                    }\r\n                }],\r\n                dataZoom: [{\r\n                    show: true,\r\n                    height: 30,\r\n                    xAxisIndex: [\r\n                        0\r\n                    ],\r\n                    bottom: 30,\r\n                    start: 10,\r\n                    end: 80,\r\n                    handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\r\n                    handleSize: '110%',\r\n                    handleStyle: {\r\n                       color: '#336699'\r\n                    },\r\n                    textStyle: {\r\n                       color: '#000' \r\n                    },\r\n                    borderColor: '#339999'\r\n                }, {\r\n                    type: 'inside',\r\n                    show: true,\r\n                    height: 15,\r\n                    start: 1,\r\n                    end: 35\r\n                }],\r\n                series: [{\r\n                    name: '收入',\r\n                    type: 'bar',\r\n                    stack: '总量',\r\n                    barMaxWidth: 35,\r\n                    barGap: '10%',\r\n                    itemStyle: {\r\n                    normal: {\r\n                        color: '#66CC99',\r\n                        label: {\r\n                            show: true,\r\n                            textStyle: {color: '#fff'},\r\n                            position: 'insideTop',\r\n                            formatter(p) {return p.value > 0 ? p.value : '' }\r\n                        }\r\n                    }\r\n                    },\r\n                    data: data.seriesIncome\r\n                },\r\n                {\r\n                    name: '支出',\r\n                    type: 'bar',\r\n                    stack: '总量',\r\n                    itemStyle: {\r\n                    normal: {\r\n                        color: '#0099CC',\r\n                        barBorderRadius: 0,\r\n                        label: {\r\n                        show: true,\r\n                        position: 'top',\r\n                        formatter(p) {\r\n                            return p.value > 0 ? p.value : '';\r\n                        }\r\n                        }\r\n                    }\r\n                    },\r\n                    data:data.seriesPay\r\n                }, {\r\n                    name: '平均',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    symbolSize: 10,\r\n                    symbol: 'circle',\r\n                    itemStyle: {\r\n                    normal: {\r\n                        color: '#FF9966',\r\n                        barBorderRadius: 0,\r\n                        label: {\r\n                            show: true,\r\n                            position: 'top',\r\n                            formatter(p) {\r\n                                return p.value > 0 ? p.value : '';\r\n                            }\r\n                        }\r\n                    }\r\n                    },\r\n                    data:data.seriesaverage\r\n                }\r\n                ]\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<style lang=\"less\" scoped>\r\n     \r\n</style>\r\n\r\n\r\n"]}]}