{"remainingRequest":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\page\\infoManage\\infoModify.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\page\\infoManage\\infoModify.vue","mtime":1677382302024},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\babel.config.js","mtime":1677382256176},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import * as mutils from '@/utils/mUtils';\nexport default {\n  data: function data() {\n    var _this = this;\n    // 附带callback(),是在明确通过验证的情况下去掉输入框上的loading\n    var validateEmail = function validateEmail(rule, value, callback) {\n      if (value == '') {\n        callback(new Error('请输入邮箱~'));\n        return;\n      }\n      var emailRegex = /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/;\n      if (!emailRegex.test(value)) {\n        callback(new Error('邮箱格式不正确！'));\n      } else {\n        callback();\n      }\n    };\n    var validatePhone = function validatePhone(rule, value, callback) {\n      if (value == '') {\n        callback(new Error('请输入手机号码~'));\n      }\n      {\n        var phoneRegex = /^1[34578]\\d{9}$/;\n        if (!phoneRegex.test(value)) {\n          callback(new Error('手机号码格式不正确！'));\n        } else {\n          callback();\n        }\n      }\n    };\n    // validateField:对部分表单字段进行校验的方法\n    var validateNewpassword = function validateNewpassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入新密码'));\n      } else {\n        if (_this.pwdForm.surepassword !== '') {\n          _this.$refs.pwdForm.validateField('surepassword');\n        }\n        callback();\n      }\n    };\n    var validateSurepassword = function validateSurepassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入确认密码'));\n      } else if (value !== _this.pwdForm.newpassword) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      infoForm: {\n        username: '',\n        nickname: '',\n        touziyear: '',\n        email: '',\n        telphone: ''\n      },\n      pwdForm: {\n        password: '',\n        newpassword: '',\n        surepassword: ''\n      },\n      phoneForm: {\n        phone: '',\n        baseType: [],\n        changeType: []\n      },\n      infoRules: {\n        nickname: [{\n          required: true,\n          message: '请输入昵称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 8,\n          message: '长度在 2 到 8 个字符',\n          trigger: 'blur'\n        }],\n        touziyear: [{\n          required: true,\n          message: '请选择投资年限',\n          trigger: 'change'\n        }],\n        email: [{\n          required: true,\n          validator: validateEmail,\n          trigger: 'blur'\n        }],\n        telphone: [{\n          required: true,\n          validator: validatePhone,\n          trigger: 'blur'\n        }]\n      },\n      pwdRules: {\n        password: [{\n          required: true,\n          message: '请输入原密码',\n          trigger: 'blur'\n        }],\n        newpassword: [{\n          required: true,\n          validator: validateNewpassword,\n          trigger: 'blur'\n        }],\n        surepassword: [{\n          required: true,\n          validator: validateSurepassword,\n          trigger: 'blur'\n        }]\n      },\n      phoneRules: {\n        phone: [{\n          required: true,\n          validator: validatePhone,\n          trigger: 'blur'\n        }],\n        baseType: [{\n          type: 'array',\n          required: true,\n          message: '请至少选择一个基础短信服务',\n          trigger: 'change'\n        }],\n        changeType: [{\n          type: 'array',\n          required: true,\n          message: '请至少选择一个可选短信服务',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    // mutils.setContentHeight(this,this.$refs.fillcontain,170);\n  },\n  methods: {\n    showMessage: function showMessage(type, message) {\n      this.$message({\n        type: type,\n        message: message\n      });\n    },\n    showUsername: function showUsername() {\n      var userinfo = mutils.getStore('userinfo');\n      this.infoForm.username = userinfo.username;\n    },\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          if (formName == 'pwdForm') {\n            _this2.showMessage('success', '修改密码成功~');\n          } else if (formName == 'infoForm') {\n            // 判断手机服务是否为空\n            _this2.phoneForm.phone = _this2.infoForm.telphone;\n            for (var key in _this2.phoneForm) {\n              if (_this2.phoneForm[key] == '') {\n                _this2.showMessage('warning', '请您选择手机服务~');\n                return;\n              }\n            }\n          } else if (formName == 'phoneForm') {\n            // 判断修改信息是否为空\n            _this2.infoForm.telphone = _this2.phoneForm.phone;\n            for (var _key in _this2.infoForm) {\n              if (_this2.infoForm[_key] == '') {\n                _this2.showMessage('warning', '请您修改相关信息~');\n                return;\n              }\n            }\n          }\n          //保存修改的相关信息\n          var userinfo = _this2.infoForm;\n          var phoneinfo = _this2.phoneForm;\n          var userData = Object.assign(userinfo, phoneinfo);\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};",null]}