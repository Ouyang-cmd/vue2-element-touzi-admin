{"remainingRequest":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\utils\\axios.js","dependencies":[{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\utils\\axios.js","mtime":1677382302064},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\babel.config.js","mtime":1677382256176},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Message, MessageBox } from 'element-ui';\nimport store from \"../store\";\nimport { getToken } from '@/utils/auth';\n\n// 创建axios实例\nvar service = axios.create({\n  baseURL: process.env.BASE_API,\n  // api的base_url\n  timeout: 5000 // 请求超时时间\n});\n// request拦截器\nservice.interceptors.request.use(function (config) {\n  if (store.getters.token) {\n    config.headers = {\n      'Authorization': \"Token \" + getToken('Token') //携带权限参数\n    };\n  }\n\n  return config;\n}, function (error) {\n  Promise.reject(error);\n});\n\n// respone拦截器\nservice.interceptors.response.use(function (response) {\n  /**\r\n   * code:200,接口正常返回;\r\n   */\n  var res = response.data;\n  if (res.code !== 200) {\n    Message({\n      message: res.message,\n      type: 'error',\n      duration: 5 * 1000\n    });\n    // 根据服务端约定的状态码：5001:非法的token; 5002:其他客户端登录了; 5004:Token 过期了;\n    if (res.code === 5001 || res.code === 5002 || res.code === 5004) {\n      MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\n        confirmButtonText: '重新登录',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        store.dispatch('LogOut').then(function () {\n          location.reload(); // 为了重新实例化vue-router对象 避免bug\n        });\n      });\n    }\n\n    return Promise.reject('error');\n  } else {\n    // res.code === 200,正常返回数据\n    return response.data;\n  }\n}, function (error) {\n  Message({\n    message: error.message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;",null]}