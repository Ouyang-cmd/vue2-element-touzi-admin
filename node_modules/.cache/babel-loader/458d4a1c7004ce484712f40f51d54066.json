{"remainingRequest":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\mockjs\\user.js","dependencies":[{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\mockjs\\user.js","mtime":1677382301997},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\babel.config.js","mtime":1677382256176},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["import Mock from 'mockjs';\nimport * as mUtils from '@/utils/mUtils';\nvar List = [];\nvar count = 1000;\nvar typelist = ['联通', '移动', '电信', '铁通'];\nfor (var i = 0; i < count; i++) {\n  List.push(Mock.mock({\n    id: Mock.Random.guid(),\n    sortnum: i + 1,\n    username: Mock.Random.cname(),\n    address: Mock.mock('@county(true)'),\n    createTime: Mock.Random.datetime(),\n    updateTime: Mock.Random.now(),\n    ip: Mock.mock('@ip'),\n    region: Mock.mock('@region'),\n    areaId: /\\d{7}/,\n    email: Mock.Random.email(),\n    'isp|1': typelist\n  }));\n}\nexport default {\n  // 用户登录\n  login: function login(config) {\n    var data = JSON.parse(config.body);\n    var userList = {};\n    if (data.username === 'admin') {\n      userList = {\n        token: 'admin',\n        name: '管理员'\n      };\n    } else if (data.username === 'editor') {\n      userList = {\n        token: 'editor',\n        name: '赵晓编'\n      };\n    } else {\n      return {\n        code: -1,\n        data: {\n          msg: \"用户名错误\",\n          status: 'fail'\n        }\n      };\n    }\n    return {\n      code: 200,\n      data: {\n        userList: userList\n      }\n    };\n  },\n  // 用户登出\n  logout: function logout(config) {\n    return {\n      code: 200,\n      data: {\n        userList: \"\"\n      }\n    };\n  },\n  // 获取登录用户信息\n  getUserInfo: function getUserInfo(config) {\n    var data = JSON.parse(config.body);\n    var userList = {};\n    if (data.token === 'admin') {\n      userList = {\n        roles: ['admin'],\n        name: 'admin',\n        avatar: 'https://wx.qlogo.cn/mmopen/vi_32/un2HbJJc6eiaviaibvMgiasFNlVDlNOb9E6WCpCrsO4wMMhHIbsvTkAbIehLwROVFlu8dLMcg00t3ZtOcgCCdcxlZA/132'\n      };\n    } else if (data.token === 'editor') {\n      userList = {\n        roles: ['editor'],\n        name: 'editor',\n        avatar: 'https://mirror-gold-cdn.xitu.io/168e088859e325b9d85?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1'\n      };\n    } else {\n      userList = {};\n    }\n    return {\n      code: 200,\n      data: {\n        userList: userList\n      }\n    };\n  },\n  /**\r\n  * 获取用户列表\r\n  * 要带参数 name, page, limt; name可以不填, page,limit有默认值。\r\n  * @param name, page, limit\r\n  * @return {{code: number, count: number, data: *[]}}\r\n  */\n  getUserList: function getUserList(config) {\n    var _JSON$parse = JSON.parse(config.body),\n      limit = _JSON$parse.limit,\n      page = _JSON$parse.page;\n    var mockList = List;\n    var userList = mockList.filter(function (item, index) {\n      return index < limit * page && index >= limit * (page - 1);\n    });\n    return {\n      code: 200,\n      data: {\n        total: mockList.length,\n        userList: userList\n      }\n    };\n  }\n};",{"version":3,"names":["Mock","mUtils","List","count","typelist","i","push","mock","id","Random","guid","sortnum","username","cname","address","createTime","datetime","updateTime","now","ip","region","areaId","email","login","config","data","JSON","parse","body","userList","token","name","code","msg","status","logout","getUserInfo","roles","avatar","getUserList","_JSON$parse","limit","page","mockList","filter","item","index","total","length"],"sources":["C:/Users/ou943/Desktop/pro-vue/vue2-element-touzi-admin/src/mockjs/user.js"],"sourcesContent":["import Mock from 'mockjs'\r\nimport * as mUtils from '@/utils/mUtils'\r\n\r\n\r\nlet List = []\r\nconst count = 1000\r\nlet typelist = ['联通', '移动', '电信', '铁通']\r\n\r\nfor (let i = 0; i < count; i++) {\r\n  List.push(Mock.mock({\r\n    id: Mock.Random.guid(),\r\n    sortnum: i + 1,\r\n    username: Mock.Random.cname(),\r\n    address: Mock.mock('@county(true)'),\r\n    createTime: Mock.Random.datetime(),\r\n    updateTime: Mock.Random.now(),\r\n    ip:Mock.mock('@ip'),\r\n    region:Mock.mock('@region'),\r\n    areaId:/\\d{7}/,\r\n    email: Mock.Random.email(),\r\n    'isp|1': typelist\r\n  }))\r\n}\r\n\r\nexport default {\r\n  // 用户登录\r\n  login: config => {\r\n    let data = JSON.parse(config.body);\r\n    let userList = {};\r\n    if(data.username === 'admin'){\r\n        userList = {\r\n            token:'admin',\r\n            name:'管理员',\r\n        }\r\n    }else if(data.username === 'editor'){\r\n        userList = {\r\n            token:'editor',\r\n            name:'赵晓编',\r\n        }\r\n    }else{\r\n       return {\r\n        code: -1,\r\n        data: {\r\n          msg: \"用户名错误\",\r\n          status:'fail'\r\n        }\r\n       }\r\n    }\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        userList: userList\r\n      }\r\n    }\r\n  },\r\n   // 用户登出\r\n   logout: config => {\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        userList: \"\"\r\n      }\r\n    }\r\n  },\r\n  // 获取登录用户信息\r\n  getUserInfo:config => {\r\n    let data = JSON.parse(config.body);\r\n    let userList = {};\r\n    if(data.token === 'admin'){\r\n        userList = {\r\n            roles: ['admin'],\r\n            name:'admin',\r\n            avatar:'https://wx.qlogo.cn/mmopen/vi_32/un2HbJJc6eiaviaibvMgiasFNlVDlNOb9E6WCpCrsO4wMMhHIbsvTkAbIehLwROVFlu8dLMcg00t3ZtOcgCCdcxlZA/132'\r\n        }\r\n    }else if(data.token === 'editor'){\r\n        userList = {\r\n            roles: ['editor'],\r\n            name:'editor',\r\n            avatar:'https://mirror-gold-cdn.xitu.io/168e088859e325b9d85?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1'\r\n        }\r\n    }else{\r\n        userList = {}\r\n    }\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        userList: userList\r\n      }\r\n    }\r\n  },\r\n   /**\r\n   * 获取用户列表\r\n   * 要带参数 name, page, limt; name可以不填, page,limit有默认值。\r\n   * @param name, page, limit\r\n   * @return {{code: number, count: number, data: *[]}}\r\n   */\r\n  getUserList:config => {\r\n    const { limit , page } = JSON.parse(config.body);\r\n    let mockList = List;\r\n    const userList = mockList.filter((item, index) => index < limit * page && index >= limit * (page - 1))\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        total: mockList.length,\r\n        userList: userList\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAO,KAAKC,MAAM,MAAM,gBAAgB;AAGxC,IAAIC,IAAI,GAAG,EAAE;AACb,IAAMC,KAAK,GAAG,IAAI;AAClB,IAAIC,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAEvC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,EAAEE,CAAC,EAAE,EAAE;EAC9BH,IAAI,CAACI,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC;IAClBC,EAAE,EAAER,IAAI,CAACS,MAAM,CAACC,IAAI,EAAE;IACtBC,OAAO,EAAEN,CAAC,GAAG,CAAC;IACdO,QAAQ,EAAEZ,IAAI,CAACS,MAAM,CAACI,KAAK,EAAE;IAC7BC,OAAO,EAAEd,IAAI,CAACO,IAAI,CAAC,eAAe,CAAC;IACnCQ,UAAU,EAAEf,IAAI,CAACS,MAAM,CAACO,QAAQ,EAAE;IAClCC,UAAU,EAAEjB,IAAI,CAACS,MAAM,CAACS,GAAG,EAAE;IAC7BC,EAAE,EAACnB,IAAI,CAACO,IAAI,CAAC,KAAK,CAAC;IACnBa,MAAM,EAACpB,IAAI,CAACO,IAAI,CAAC,SAAS,CAAC;IAC3Bc,MAAM,EAAC,OAAO;IACdC,KAAK,EAAEtB,IAAI,CAACS,MAAM,CAACa,KAAK,EAAE;IAC1B,OAAO,EAAElB;EACX,CAAC,CAAC,CAAC;AACL;AAEA,eAAe;EACb;EACAmB,KAAK,EAAE,SAAAA,MAAAC,MAAM,EAAI;IACf,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,IAAI,CAAC;IAClC,IAAIC,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAGJ,IAAI,CAACb,QAAQ,KAAK,OAAO,EAAC;MACzBiB,QAAQ,GAAG;QACPC,KAAK,EAAC,OAAO;QACbC,IAAI,EAAC;MACT,CAAC;IACL,CAAC,MAAK,IAAGN,IAAI,CAACb,QAAQ,KAAK,QAAQ,EAAC;MAChCiB,QAAQ,GAAG;QACPC,KAAK,EAAC,QAAQ;QACdC,IAAI,EAAC;MACT,CAAC;IACL,CAAC,MAAI;MACF,OAAO;QACNC,IAAI,EAAE,CAAC,CAAC;QACRP,IAAI,EAAE;UACJQ,GAAG,EAAE,OAAO;UACZC,MAAM,EAAC;QACT;MACD,CAAC;IACJ;IACA,OAAO;MACLF,IAAI,EAAE,GAAG;MACTP,IAAI,EAAE;QACJI,QAAQ,EAAEA;MACZ;IACF,CAAC;EACH,CAAC;EACA;EACAM,MAAM,EAAE,SAAAA,OAAAX,MAAM,EAAI;IACjB,OAAO;MACLQ,IAAI,EAAE,GAAG;MACTP,IAAI,EAAE;QACJI,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACD;EACAO,WAAW,EAAC,SAAAA,YAAAZ,MAAM,EAAI;IACpB,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,IAAI,CAAC;IAClC,IAAIC,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAGJ,IAAI,CAACK,KAAK,KAAK,OAAO,EAAC;MACtBD,QAAQ,GAAG;QACPQ,KAAK,EAAE,CAAC,OAAO,CAAC;QAChBN,IAAI,EAAC,OAAO;QACZO,MAAM,EAAC;MACX,CAAC;IACL,CAAC,MAAK,IAAGb,IAAI,CAACK,KAAK,KAAK,QAAQ,EAAC;MAC7BD,QAAQ,GAAG;QACPQ,KAAK,EAAE,CAAC,QAAQ,CAAC;QACjBN,IAAI,EAAC,QAAQ;QACbO,MAAM,EAAC;MACX,CAAC;IACL,CAAC,MAAI;MACDT,QAAQ,GAAG,CAAC,CAAC;IACjB;IACA,OAAO;MACLG,IAAI,EAAE,GAAG;MACTP,IAAI,EAAE;QACJI,QAAQ,EAAEA;MACZ;IACF,CAAC;EACH,CAAC;EACA;AACH;AACA;AACA;AACA;AACA;EACEU,WAAW,EAAC,SAAAA,YAAAf,MAAM,EAAI;IACpB,IAAAgB,WAAA,GAAyBd,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,IAAI,CAAC;MAAxCa,KAAK,GAAAD,WAAA,CAALC,KAAK;MAAGC,IAAI,GAAAF,WAAA,CAAJE,IAAI;IACpB,IAAIC,QAAQ,GAAGzC,IAAI;IACnB,IAAM2B,QAAQ,GAAGc,QAAQ,CAACC,MAAM,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OAAKA,KAAK,GAAGL,KAAK,GAAGC,IAAI,IAAII,KAAK,IAAIL,KAAK,IAAIC,IAAI,GAAG,CAAC,CAAC;IAAA,EAAC;IACtG,OAAO;MACLV,IAAI,EAAE,GAAG;MACTP,IAAI,EAAE;QACJsB,KAAK,EAAEJ,QAAQ,CAACK,MAAM;QACtBnB,QAAQ,EAAEA;MACZ;IACF,CAAC;EACH;AAGF,CAAC"}]}