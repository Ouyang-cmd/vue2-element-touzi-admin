{"remainingRequest":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\store\\modules\\user.js","mtime":1677382302056},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\babel.config.js","mtime":1677382256176},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport * as mUtils from '@/utils/mUtils';\nimport { logout, getUserInfo } from '@/api/user'; // 导入用户信息相关接口\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nvar user = {\n  state: {\n    name: '',\n    avatar: '',\n    token: getToken('Token'),\n    roles: [],\n    browserHeaderTitle: mUtils.getStore('browserHeaderTitle') || '小爱Admin'\n  },\n  getters: {\n    token: function token(state) {\n      return state.token;\n    },\n    roles: function roles(state) {\n      return state.roles;\n    },\n    avatar: function avatar(state) {\n      return state.avatar;\n    },\n    name: function name(state) {\n      return state.name;\n    },\n    browserHeaderTitle: function browserHeaderTitle(state) {\n      return state.browserHeaderTitle;\n    }\n  },\n  mutations: {\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    },\n    SET_BROWSERHEADERTITLE: function SET_BROWSERHEADERTITLE(state, action) {\n      state.browserHeaderTitle = action.browserHeaderTitle;\n    },\n    SET_NAME: function SET_NAME(state, name) {\n      state.name = name;\n    },\n    SET_AVATAR: function SET_AVATAR(state, avatar) {\n      state.avatar = avatar;\n    }\n  },\n  actions: {\n    //登出\n    LogOut: function LogOut(_ref) {\n      var commit = _ref.commit,\n        reqData = _ref.reqData;\n      return new Promise(function (resolve, reject) {\n        logout(reqData).then(function (response) {\n          commit('SET_ROLES', []);\n          removeToken('Token');\n          resolve();\n        });\n      });\n    },\n    // 动态修改权限;本实例中,role和token是相同的;\n    ChangeRoles: function ChangeRoles(_ref2, role) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve) {\n        var token = role;\n        setToken(\"Token\", token);\n        getUserInfo({\n          \"token\": token\n        }).then(function (res) {\n          var data = res.data.userList;\n          commit('SET_ROLES', data.roles);\n          commit('SET_NAME', data.name);\n          commit('SET_AVATAR', data.avatar);\n          resolve();\n        });\n      });\n    }\n  }\n};\nexport default user;\n\n/**\r\n * 1、用户退出,需要调取后台接口吗？后台具体的业务逻辑是什么？\r\n * \r\n * \r\n */",null]}