{"remainingRequest":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\page\\fundList\\components\\addFundDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\src\\page\\fundList\\components\\addFundDialog.vue","mtime":1677382302009},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\babel.config.js","mtime":1677382256176},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ou943\\Desktop\\pro-vue\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _toConsumableArray from \"C:/Users/ou943/Desktop/pro-vue/vue2-element-touzi-admin/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"C:/Users/ou943/Desktop/pro-vue/vue2-element-touzi-admin/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mapState, mapGetters } from 'vuex';\nimport { addMoney, updateMoney } from \"@/api/money\";\nimport AreaJson from \"@/assets/datas/area.json\";\nexport default {\n  name: 'addFundDialogs',\n  data: function data() {\n    var validateData = function validateData(rule, value, callback) {\n      if (value === '') {\n        var text;\n        if (rule.field == \"income\") {\n          text = '收入';\n        } else if (rule.field == \"pay\") {\n          text = '支出';\n        } else if (rule.field == 'accoutCash') {\n          text = '账户现金';\n        }\n        callback(new Error(text + '不能为空~'));\n      } else {\n        var numReg = /^[0-9]+.?[0-9]*$/;\n        if (!numReg.test(value)) {\n          callback(new Error('请输入正数值'));\n        } else {\n          callback();\n        }\n      }\n    };\n    return {\n      areaData: [],\n      isVisible: this.isShow,\n      form: {\n        incomePayType: '',\n        address: [],\n        tableAddress: '',\n        username: '',\n        income: '',\n        pay: '',\n        accoutCash: '',\n        remarks: ''\n      },\n      payType: [{\n        label: '提现',\n        value: '0'\n      }, {\n        label: '提现手续费',\n        value: '1'\n      }, {\n        label: '提现锁定',\n        value: '2'\n      }, {\n        label: '理财服务退出',\n        value: '3'\n      }, {\n        label: '购买宜定盈',\n        value: '4'\n      }, {\n        label: '充值',\n        value: '5'\n      }, {\n        label: '优惠券',\n        value: '6'\n      }, {\n        label: '充值礼券',\n        value: '7'\n      }, {\n        label: '转账',\n        value: '8'\n      }],\n      form_rules: {\n        username: [{\n          required: true,\n          message: '用户名不能为空！',\n          trigger: 'blur'\n        }],\n        income: [{\n          required: true,\n          validator: validateData,\n          trigger: 'blur'\n        }],\n        pay: [{\n          required: true,\n          validator: validateData,\n          trigger: 'blur'\n        }],\n        accoutCash: [{\n          required: true,\n          validator: validateData,\n          trigger: 'blur'\n        }],\n        incomePayType: [{\n          required: true,\n          message: '请选择收支类型',\n          trigger: 'change'\n        }],\n        address: [{\n          required: true,\n          message: '请选择籍贯',\n          trigger: 'change'\n        }]\n      },\n      //详情弹框信息\n      dialog: {\n        width: '400px',\n        formLabelWidth: '120px'\n      }\n    };\n  },\n  props: {\n    isShow: Boolean,\n    dialogRow: Object\n  },\n  computed: _objectSpread({}, mapGetters(['addFundDialog'])),\n  created: function created() {\n    this.areaData = AreaJson;\n  },\n  mounted: function mounted() {\n    var _this = this;\n    if (this.addFundDialog.type === 'edit') {\n      this.form = this.dialogRow;\n      console.log(this.form);\n      this.form.incomePayType = this.dialogRow.incomePayType.toString();\n      // this.form.address = [\"120000\", \"120200\", \"120223\"]\n    } else {\n      this.$nextTick(function () {\n        _this.$refs['form'].resetFields();\n      });\n    }\n  },\n  methods: {\n    getCascaderObj: function getCascaderObj(val, opt) {\n      return val.map(function (value, index, array) {\n        var _iterator = _createForOfIteratorHelper(opt),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            if (item.value == value) {\n              opt = item.children;\n              return item.label;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return null;\n      });\n    },\n    handleChange: function handleChange(value) {\n      console.log(_toConsumableArray(value)); // [\"120000\", \"120200\", \"120223\"]\n      this.form.address = _toConsumableArray(value);\n      var vals = this.getCascaderObj(_toConsumableArray(value), this.areaData); // arr\n      this.form.tableAddress = vals.join(',').replace(/,/g, '');\n    },\n    closeDialog: function closeDialog() {\n      this.$emit('closeDialog');\n    },\n    //表单提交\n    onSubmit: function onSubmit(form) {\n      var _this2 = this;\n      this.$refs[form].validate(function (valid) {\n        if (valid) {\n          //表单数据验证完成之后，提交数据;\n          var formData = _this2[form];\n          var para = Object.assign({}, formData);\n          console.log(para);\n          // edit\n          if (_this2.addFundDialog.type === 'edit') {\n            updateMoney(para).then(function (res) {\n              _this2.$message({\n                message: '修改成功',\n                type: 'success'\n              });\n              _this2.$refs['form'].resetFields();\n              _this2.isVisible = false;\n              _this2.$emit('getFundList');\n            });\n          } else {\n            // add\n            addMoney(para).then(function (res) {\n              _this2.$message({\n                message: '新增成功',\n                type: 'success'\n              });\n              _this2.$refs['form'].resetFields();\n              _this2.isVisible = false;\n              _this2.$emit('getFundList');\n            });\n          }\n        }\n      });\n    }\n  }\n};",null]}